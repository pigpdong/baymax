<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
   	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
   	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource_p1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url">
			<value>
				${jdbc.druid.url}
			</value>
		</property>
		<property name="username">
			<value>${jdbc.druid.user}</value>
		</property>
		<property name="password">
			<value>${jdbc.druid.password}</value>
		</property>
        <property name="filters" value="stat,wall" />
	</bean>

	<bean id="dataSource_p2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url">
			<value>
				${jdbc.druid.p2.url}
			</value>
		</property>
		<property name="username">
			<value>${jdbc.druid.p2.user}</value>
		</property>
		<property name="password">
			<value>${jdbc.druid.p2.password}</value>
		</property>
        <property name="filters" value="stat,wall" />
	</bean>
		
	<!-- 数据源分发器 -->
	<bean id="multipleDataSource" class="com.tongbanjie.baymax.datasource.BaymaxDataSource" init-method="init">
		<property name="dataSourceGroupSet">
			<set>
				<bean class="com.tongbanjie.baymax.datasource.DataSourceGroup">
					<property name="identity" value="p1"/>
					<property name="targetDataSource" ref="dataSource_p1"/>
				</bean>
				<bean class="com.tongbanjie.baymax.datasource.DataSourceGroup">
					<property name="identity" value="p2"/>
					<property name="targetDataSource" ref="dataSource_p2"/>
				</bean>
			</set>
		</property>
	</bean>

	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="com.tbjfund.framework.tpa.TpaSqlSessionFactoryBean">
		<property name="configLocation" value="classpath:META-INF/mybatis/mybatis-configuration.xml" />
		<property name="mapperLocations" value="classpath*:META-INF/mybatis/tables/*.xml" />
		<property name="dataSource" ref="multipleDataSource" />
        <property name="scanPackage" value="mybatis"/>
	</bean>
	
	<!-- 路由配置文件 -->
	<import resource="classpath:META-INF/partition/baymax-spring.xml" />
	
</beans>
