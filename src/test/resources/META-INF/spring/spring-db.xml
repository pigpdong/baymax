<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
   	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
   	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url">
			<value>
				${jdbc.druid.url}
			</value>
		</property>
		<property name="username">
			<value>${jdbc.druid.user}</value>
		</property>
		<property name="password">
			<value>${jdbc.druid.password}</value>
			<!-- <bean class="com.tongbanjie.commons.support.spring.EncryptDBPasswordFactory">
				<property name="password" value="${jdbc.druid.password}" />
			</bean> -->
		</property>
	</bean>
	
	<!-- 数据源分发器 -->
	<bean id="dataSourceDispatcher" class="com.tongbanjie.baymax.datasources.DataSourceDispatcher">
		<property name="nativeDataSourceHandlerSet">
			<set>
				<bean class="com.tongbanjie.baymax.datasources.NativeDataSourceHandler">
					<property name="identity" value="partion1"/>
					<property name="targetDataSource" ref="dataSource"/>
				</bean>
				<bean class="com.tongbanjie.baymax.datasources.NativeDataSourceHandler">
					<property name="identity" value="partion2"/>
					<property name="targetDataSource" ref="dataSource"/>
				</bean>
			</set>
		</property>
	</bean>

	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<!-- 多数据源事务管理器 -->
	<bean id="transactionManager" class="com.tongbanjie.baymax.transaction.MultipleDataSourcesTransactionManager">
		<property name="dataSourceDispatcher" ref="dataSourceDispatcher" />
	</bean>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:META-INF/mybatis/mybatis-configuration.xml" />
		<property name="mapperLocations" value="classpath*:META-INF/mybatis/tables/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- BayMax上下文 -->
	<bean name="baymaxContext" class="com.tongbanjie.baymax.BayMaxContext">
		<property name="dataSourceDispatcher" ref="dataSourceDispatcher"/>
	</bean>
	
	<!-- 路由配置文件 -->
	<import resource="classpath:META-INF/partition/*.xml" />
</beans>
