<?xml version="1.0" encoding="gb2312"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	   xmlns:NodeKit="http://nodekit.tongbanjie.com/schema/tags"
	   xsi:schemaLocation="
	   http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://code.alibabatech.com/schema/dubbo 
       http://res.tongbanjie.com/resources/schema/xsd/dubbo.xsd">
       
 	<bean id="root" class="com.taobao.tddl.common.config.beans.AppRule" init-method="init">
		<property name="readwriteRule" ref="readwriteRule" />
	</bean>

	<bean id="readwriteRule" class="com.taobao.tddl.common.config.beans.ShardRule">
		<property name="dbtype" value="MYSQL" />
		<property name="tableRules">
			<map>
				<entry key="tddl_table" value-ref="tddl_table" />
			</map>
		</property>
	</bean>

	<bean id="tddl_table" init-method="init"
		class="com.taobao.tddl.common.config.beans.TableRule">
		数据库组 index 号
		<property name="dbIndexes" value="tddl_test,tddl_test2" />
		分库规则
		<property name="dbRuleArray" value="(#id#.longValue() % 4).intdiv(2)" />
		分表规则 , 需要注意的是，因为 taobao 目前 dba 的要求是所有库内的表名必须完全不同，因此这里多加了一个映射的关系
		简单来说，分表规则只会算表的
		key. 俩库 4 表 : db1(tab1+tab2) db2(tab3+tab4) db1 == key: 0 value tab1 key:
		1 value tab2 db2 == key: 0 value tab3 key: 1 value tab4
		<property name="tbRuleArray" value="#id#.longValue() % 4 % 2" />
		<property name="tbSuffix" value="throughAllDB:[_0-_3]" />
	</bean>
	
	<NodeKit:dataSourceService id="defaultNodeKitDataSourceService">
		
	</NodeKit:dataSourceService>
	
	<!-- 把SQL与路由规则绑定，Mybatis执行某个statement的时候会调用对应的路由规则进行数据库和表名的路由 -->
	<NodeKit:rolesMapping>
		<NodeKit:statement value="com.tongbanjie.trade.add"/>
		<!-- 枚举路由 解决 where id in {1,2,3}      where id=1 or id=2 的问题 -->
		<!-- enumArray表示路由列的数组 -->
		<NodeKit:roleWarp expire="${inArray}" refRole="defaultRole"/>
	</NodeKit:rolesMapping>
	
	<NodeKit:rolesMapping>
		<NodeKit:statement value="com.tongbanjie.trade.*"/>
		<NodeKit:roleWarp expire="${id}" refRole="defaultRole" />
	</NodeKit:rolesMapping>
	
	<!-- 配置路由规则 -->	
	<NodeKit:roles>
		<NodeKit:role name="defaultRole">
			<!-- 库路由规则 -->
			<NodeKit:dbshare>
				<NodeKit:dbIndex>p1,p2</NodeKit:dbIndex>
				<NodeKit:expire>${id} % 35</NodeKit:expire>
			</NodeKit:dbshare>
			<!-- 表路由规则 -->
			<NodeKit:tableshare>
				<!-- expire表达式只能返回两种类型的计算结果  boolean和number -->
				<!-- expire表达式的计算结果类型不是 boolean 则把结果代入pattern计算 -->
				<NodeKit:expire>${id} % 35</NodeKit:expire>
				<NodeKit:tablePattern>trade_order:trade_order_{0000}</NodeKit:tablePattern>
			</NodeKit:tableshare>
		</NodeKit:role>
		
		<NodeKit:role name="tradeOrder_tableRole">
			<NodeKit:dbshare>
				<NodeKit:dbIndex>p1,p2</NodeKit:dbIndex>
				<NodeKit:expire><![CDATA[${id} <= 1000 ? 1:false]]> </NodeKit:expire>
				<NodeKit:expire><![CDATA[${id} > 1000  ? 2:false]]> </NodeKit:expire>
			</NodeKit:dbshare>	
			
			<NodeKit:tableshare>
				<!-- 不支持全表扫描 , 每个库里面的表明不同-->
				<NodeKit:tablePattern>replace:trade_order:trade_order_${0000}</NodeKit:tablePattern>
				<!-- 支持全表扫描，每个库里面的表明相同 -->
				<NodeKit:tablePattern>allthrowdb:trade_order:trade_order_${0000-0010}</NodeKit:tablePattern>
				<NodeKit:expire><![CDATA[${id} <= 1000 ? 1:false]]> </NodeKit:expire>
				<NodeKit:expire><![CDATA[${id} > 1000  ? 2:false]]> </NodeKit:expire>
			</NodeKit:tableshare>
		</NodeKit:role>
	</NodeKit:roles>
	
	
	<nodekit:ruleMapping id="dm" class="com.tongbanjie.nodekit.rule.defaultRuleAdapter">
		<property name="statement" value="com.tongbanjie.trade.delete"/>
		<property name="ruleParameter" value=""/>
	</nodekit:ruleMapping>
	
	<nodekit:rule id="defaultRole">
		<property name="dbIndex" value="p1,p2"/>
		<property name="dbRuleArray">
			<list>
				<value>${id} % 35</value>
				<value>${name} % 35</value>
			</list>
		</property>
		<property name=tbRuleArray>
			<list>
				<value>${id} % 35</value>
				<value>${name} % 35</value>
			</list>
		</property>
		<property name="tablePattern" value="replace:trade_order:trade_order_${0000}"/>
		<property name="tablePattern" value="allthrowdb:trade_order:trade_order_${0000-0010}"/>
	</nodekit:rule>
	
</beans>