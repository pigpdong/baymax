<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="http://baymax.tongbanjie.com/schema/baymax-3.0"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:beans="http://www.springframework.org/schema/beans"
            targetNamespace="http://baymax.tongbanjie.com/schema/baymax-3.0">

    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:import namespace="http://www.springframework.org/schema/beans" />
    <xsd:import namespace="http://www.springframework.org/schema/tool" />

    <xsd:annotation>
        <xsd:documentation><![CDATA[ Namespace support for the baymax services provided by baymax framework. ]]></xsd:documentation>
    </xsd:annotation>

    <!-- context -->

    <xsd:element name="context">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:identifiedType"/>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <!-- table -->

    <xsd:element name="table" type="table-type" />

    <xsd:complexType name="table-type">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:choice minOccurs="0" maxOccurs="unbounded">
                    <xsd:element ref="beans:property" minOccurs="0" maxOccurs="unbounded" />

                    <xsd:element ref="columns" minOccurs="1" maxOccurs="1" />
                    <xsd:element ref="function" minOccurs="1" maxOccurs="1" />
                    <xsd:element ref="nodeMapping" minOccurs="1" maxOccurs="1" />

                </xsd:choice>
                <xsd:attribute name="tableName" use="required" />
                <xsd:attribute name="namePatten" use="required" />
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- columns -->

    <xsd:element name="columns" type="columns-type" />

    <xsd:complexType name="columns-type">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:choice minOccurs="1" maxOccurs="unbounded">
                    <xsd:element ref="column" minOccurs="1" maxOccurs="unbounded" />
                </xsd:choice>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- column -->

    <xsd:element name="column" type="column-type" />

    <xsd:complexType name="column-type">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:choice minOccurs="1" maxOccurs="unbounded">
                    <xsd:element ref="columnProcess" minOccurs="0" maxOccurs="unbounded" />
                </xsd:choice>
                <xsd:attribute name="name" type="xsd:string" use="required"/>
                <xsd:attribute name="process-ref" type="xsd:string" use="optional"/>
            </xsd:extension>
        </xsd:complexContent>

    </xsd:complexType>

    <!-- columnProcess -->
    <xsd:element name="columnProcess" type="columnProcess-type" />

    <xsd:complexType name="columnProcess-type">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:group ref="beans:beanElements"/>
                <xsd:attributeGroup ref="beans:beanAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>


    <!-- function -->
    <xsd:element name="function" type="function-type" />

    <xsd:complexType name="function-type">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:group ref="beans:beanElements"/>
                <xsd:attributeGroup ref="beans:beanAttributes"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <!-- nodeMapping -->
    <xsd:element name="nodeMapping" type="nodeMapping-type" />

    <xsd:complexType name="nodeMapping-type">
        <xsd:complexContent>
            <xsd:extension base="beans:identifiedType">
                <xsd:choice minOccurs="0" maxOccurs="unbounded">
                    <xsd:element ref="node" minOccurs="0" maxOccurs="unbounded" />
                    <xsd:group ref="beans:beanElements"/>
                </xsd:choice>
                <xsd:attributeGroup ref="beans:beanAttributes"/>
            </xsd:extension>

        </xsd:complexContent>
    </xsd:complexType>

    <!-- nodeMapping.node -->
    <xsd:element name="node">
        <xsd:complexType mixed="true">
            <xsd:choice minOccurs="0" maxOccurs="unbounded"/>
            <xsd:attribute name="type" type="xsd:string">
                <xsd:annotation>
                    <xsd:documentation><![CDATA[
        The exact type that the value should be converted to. Only needed
        if the type of the target property or constructor argument is
        too generic: for mybatis, in case of a collection element.
                        ]]></xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:complexType name="nodeMapping-node-type" mixed="true" >
        <xsd:choice minOccurs="0" maxOccurs="unbounded"/>
    </xsd:complexType>


    <!-- process -->

    <xsd:element name="process">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="beans:identifiedType">
                    <xsd:group ref="beans:beanElements"/>
                    <xsd:attributeGroup ref="beans:beanAttributes"/>
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

</xsd:schema>